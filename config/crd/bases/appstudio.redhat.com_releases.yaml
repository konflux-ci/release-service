---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: releases.appstudio.redhat.com
spec:
  group: appstudio.redhat.com
  names:
    kind: Release
    listKind: ReleaseList
    plural: releases
    singular: release
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.snapshot
      name: Snapshot
      type: string
    - jsonPath: .spec.releasePlan
      name: ReleasePlan
      type: string
    - jsonPath: .status.conditions[?(@.type=="Released")].reason
      name: Release status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Release is the Schema for the releases API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ReleaseSpec defines the desired state of Release.
            properties:
              releasePlan:
                description: ReleasePlan to use for this particular Release
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
              snapshot:
                description: Snapshot to be released
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
            required:
            - releasePlan
            - snapshot
            type: object
          status:
            description: ReleaseStatus defines the observed state of Release.
            properties:
              completionTime:
                description: CompletionTime is the time when a Release was completed
                format: date-time
                type: string
              conditions:
                description: Conditions represent the latest available observations
                  for the release
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              deployment:
                description: Deployment contains information about the deployment
                properties:
                  completionTime:
                    description: CompletionTime is the time when the Release deployment
                      was completed
                    format: date-time
                    type: string
                  environment:
                    description: Environment is the environment where the Release
                      will be deployed to
                    type: string
                  snapshotEnvironmentBinding:
                    description: SnapshotEnvironmentBinding contains the namespaced
                      name of the SnapshotEnvironmentBinding created as part of this
                      release
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  startTime:
                    description: StartTime is the time when the Release deployment
                      started
                    format: date-time
                    type: string
                type: object
              postActionsExecution:
                description: PostActionsExecution contains information about the post-actions
                  execution
                properties:
                  completionTime:
                    description: CompletionTime is the time when the Release post-actions
                      execution was completed
                    format: date-time
                    type: string
                  startTime:
                    description: StartTime is the time when the Release post-actions
                      execution started
                    format: date-time
                    type: string
                type: object
              processing:
                description: Processing contains information about the release processing
                properties:
                  completionTime:
                    description: CompletionTime is the time when the Release processing
                      was completed
                    format: date-time
                    type: string
                  pipelineRun:
                    description: PipelineRun contains the namespaced name of the release
                      PipelineRun executed as part of this release
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  releaseStrategy:
                    description: ReleaseStrategy contains the namespaced name of the
                      ReleaseStrategy used for this release
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  startTime:
                    description: StartTime is the time when the Release processing
                      started
                    format: date-time
                    type: string
                type: object
              startTime:
                description: StartTime is the time when a Release started
                format: date-time
                type: string
              target:
                description: Target references where this release is intended to be
                  released to
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
              validation:
                description: Validation contains information about the release validation
                properties:
                  failedPostValidation:
                    description: FailedPostValidation indicates whether the Release
                      was marked as invalid after being initially marked as valid
                    type: boolean
                  time:
                    description: Time is the time when the Release was validated or
                      when the validation state changed
                    format: date-time
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
