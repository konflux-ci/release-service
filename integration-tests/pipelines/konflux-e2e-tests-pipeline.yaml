apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: konflux-e2e-tests-pipeline
spec:
  description: |-
    This pipeline automates the process of running end-to-end tests for Konflux
    using a ROSA (Red Hat OpenShift Service on AWS) cluster. The pipeline provisions
    the ROSA cluster, installs Konflux using the infra-deployments, runs the tests, collects artifacts,
    and finally deprovisions the ROSA cluster.
  params:
    - name: SNAPSHOT
      description: The JSON string representing the snapshot of the application under test.
      default: '{"components": [{"name":"test-app", "containerImage": "quay.io/example/repo:latest"}]}'
      type: string
    - name: test-name
      description: The name of the test corresponding to a defined Konflux integration test.
      default: ''
    - name: ocp-version
      description: The OpenShift version to use for the ephemeral cluster deployment.
      type: string
    - name: test-event-type
      description: Indicates if the test is triggered by a Pull Request or Push event.
      default: 'none'
    - name: konflux-test-infra-secret
      description: The name of secret where testing infrastructures credentials are stored.
      type: string
    - name: cloud-credential-key
      description: The key secret from konflux-test-infra-secret where all AWS ROSA configurations are stored.
      type: string
    - name: replicas
      description: The number of replicas for the cluster nodes.
      type: string
    - name: machine-type
      description: The type of machine to use for the cluster nodes.
      type: string
    - name: oci-container-repo
      description: The ORAS container used to store all test artifacts.
      default: 'quay.io/konflux-test-storage/konflux-team/release-service'
    - name: quality-dashboard-api
      description: Contains the url of the backend to send metrics for quality purposes.
      default: 'none'
    - name: component-image
      description: |
        Container image built from any konflux git repo. Use this param only when you run Konflux e2e tests
        in another Konflux component repo. Will pass the component built image from the snapshot.
      default: 'none'

  tasks:
    - name: test-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/tekton-integration-catalog.git
          - name: revision
            value: main
          - name: pathInRepo
            value: common/tasks/test-metadata/0.1/test-metadata.yaml
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
        - name: test-name
          value: $(context.pipelineRun.name)

    - name: provision-kind-cluster
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/flacatus/tekton-integration-catalog
          - name: revision
            value: kind_install
          - name: pathInRepo
            value: tasks/mapt/kind-cloud/0.1/kind-cloud.yaml
      params:
        - name: secret-aws-credentials
          value: mapt-kind-secret
        - name: cpus
          value: '16'
        - name: memory
          value: '64'
        - name: id
          value: $(context.pipelineRun.name)
        - name: operation
          value: create
        - name: tags
          value: env=konflux,user=flacatus
        - name: version
          value: v1.32
        - name: debug
          value: 'false'
        - name: ownerKind
          value: PipelineRun
        - name: ownerName
          value: $(context.pipelineRun.name)
        - name: ownerUid
          value: $(context.pipelineRun.uid)
        - name: spot-increase-rate
          value: '15'

    - name: deploy-konflux
      runAfter:
        - provision-kind-cluster
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/flacatus/tekton-integration-catalog
          - name: revision
            value: kind_install
          - name: pathInRepo
            value: tasks/konflux-ci/deploy/0.1/deploy-konflux-ci.yaml
      params:
        - name: namespace
          value: rhtap-release-2-tenant
        - name: cluster-access-secret
          value: $(tasks.provision-kind-cluster.results.cluster-access-secret)
        - name: commit-sha
          value: 47b58964ca641ada8f7bb35f0b878b82eab734f4
        - name: integration-service-image
          value: quay.io/redhat-user-workloads/rhtap-integration-tenant/integration-service/integration-service:on-pr-47b58964ca641ada8f7bb35f0b878b82eab734f4@sha256:0e83cb0a6c43615344ac6f2e30efd12fba5beec674456e0b7d57e363073b72d8

    - name: konflux-e2e-tests
      timeout: 3h
      when:
        - input: "$(tasks.test-metadata.results.pull-request-author)"
          operator: notin
          values: ["red-hat-konflux[bot]"]
      runAfter:
        - deploy-konflux
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/e2e-tests.git
          - name: revision
            value: plr_test
          - name: pathInRepo
            value: integration-tests/tasks/konflux-e2e-tests-task.yaml
      params:
        - name: test-name
          value: $(context.pipelineRun.name)
        - name: git-repo
          value: $(tasks.test-metadata.results.git-repo)
        - name: git-url
          value: $(tasks.test-metadata.results.git-url)
        - name: git-revision
          value: $(tasks.test-metadata.results.git-revision)
        - name: oras-container
          value: $(params.oci-container-repo):$(context.pipelineRun.name)
        - name: job-spec
          value: $(tasks.test-metadata.results.job-spec)
        - name: component-image
          value: $(tasks.test-metadata.results.container-image)
        - name: namespace
          value: rhtap-release-2-tenant
        - name: cluster-access-secret
          value: $(tasks.provision-kind-cluster.results.cluster-access-secret)
  finally:
    - name: decommission-kind-cluster
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/flacatus/tekton-integration-catalog
          - name: revision
            value: kind_install
          - name: pathInRepo
            value: tasks/mapt/kind-cloud/0.1/kind-cloud.yaml
      params:
        - name: secret-aws-credentials
          value: mapt-kind-secret
        - name: id
          value: $(context.pipelineRun.name)
        - name: operation
          value: destroy
        - name: ownerKind
          value: PipelineRun
        - name: ownerName
          value: $(context.pipelineRun.name)
        - name: ownerUid
          value: $(context.pipelineRun.uid)
